{"version":3,"sources":["components/CalcButton.js","constants.js","functions.js","App.js","serviceWorker.js","index.js"],"names":["CalcButton","operator","label","variant","onClick","Col","Button","block","keyList","resolveValue","value","test","Error","match","RegExp","isOnlyValueWithPercents","operations","temp","map","op","arrayValues","convertValueIntoArray","index","findIndex","val","number1","number2","total","toReplace","replace","array","split","priority","posistion","i","length","isCharacterZero","isCharacterDot","isFirstCharacterMinus","isLastCharacterOperatorAndNowMinus","includes","parseInt","filter","a","findParentheses","result","parseFloat","App","useState","setValue","invalidExpression","setInvalidExpression","isCalculationCompleted","setCalculationCompleted","useEffect","window","addEventListener","onKeydown","removeEventListener","addValue","clearAll","clearLast","newValue","substring","calculate","tmpValue","hasMoreParentheses","find","resolveInsideParentheses","e","resolveNumberWithParenthesesTogether","message","key","add","shouldDisplayAllClear","useMemo","Container","Form","className","Row","Control","onChange","Text","href","data-icon","aria-label","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"6QAceA,MAVf,YAA4D,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAC9C,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQH,QAASA,EAASI,OAAK,EAACH,QAAS,kBAAMA,EAAQH,KACpDC,GAASD,K,OCEZO,EAAO,UALO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE1C,CAAC,IAAK,KADT,CAAC,IAAK,IAAK,IAAK,KAIxB,CAPI,IACA,IAJI,YACH,SACD,QAMG,MC2BPC,EAAe,SAAfA,EAAeC,GAG1B,GAAI,UAAUC,KAAKD,GACjB,MAAM,IAAIE,MAAM,sDAGlB,GApCqC,SAAAF,GAGrC,OAAOA,EAAMG,MAAM,IAAIC,OAAO,gCAAmB,MAiC7CC,CAAwBL,GAC1B,OAAOM,EAAW,KAAKN,EAAO,KAGhC,IAAIO,EAAOP,EA2BX,MArCkB,CAAC,IAAK,IAAK,IAAK,IAAK,KAW7BQ,KAAI,SAAAC,GACZ,IAAMC,EAAcC,EAAsBJ,GAEtCK,EAAQF,EAAYG,WAAU,SAAAC,GAAG,OAAIA,IAAQL,KAEjD,GAAIG,EAAQ,EAAG,CACb,IAAMrB,EAAWmB,EAAYE,GACvBG,EAAUL,EAAYE,EAAQ,GAC9BI,EAAUN,EAAYE,EAAQ,GAE9BK,EAAQX,EAAWf,GAAUwB,EAASC,GAExCE,EAAYH,EAAU,GAAKxB,EAAgByB,EAC9B,MAAbzB,IACF2B,EAAYH,EAAU,KAGxBR,EAAOA,EAAKY,QAAQD,EAAWD,IAE/BL,EAAQF,EAAYG,WAAU,SAAAC,GAAG,OAAIA,IAAQL,OAChC,IACXF,EAAOR,EAAaQ,IAGxB,MAAO,MAEFA,GAGII,EAAwB,SAAAX,GAOnC,IANA,IAAMoB,EAAQpB,EAAMqB,MAAM,IACpBC,EAAW,CAAC,IAAK,IAAK,IAAK,KAE7BZ,EAAc,GACda,EAAY,EAEPC,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAAK,CACrC,IAAME,EAA+B,MAAbN,EAAMI,GACxBG,EAA8B,MAAbP,EAAMI,GACvBI,EAAqC,MAAbR,EAAMI,IAAoB,IAANA,EAC5CK,EACS,MAAbT,EAAMI,IAAcJ,EAAMI,EAAI,IAAMF,EAASQ,SAASV,EAAMI,EAAI,IAGhEO,SAASX,EAAMI,KACfE,GACAC,GACAC,GACAC,EAEAnB,EAAYa,IAAcb,EAAYa,IAAc,IAAM,GAAKH,EAAMI,IAGrEd,IADAa,GACyBH,EAAMI,GAC/BD,KAIJ,OAAOb,EAAYsB,QAAO,SAAAC,GAAC,OAAIA,MAGpBC,EAAkB,SAAApB,GAC7B,IAAMqB,EAASrB,EAAIX,MAAM,kBACzB,OAAOgC,GAAUA,EAAO,IAGb7B,EAAa,CACxB,IAAK,SAACS,EAASC,GAAV,OAAsBoB,WAAWrB,GAAWqB,WAAWpB,IAC5D,IAAK,SAACD,EAASC,GAAV,OAAsBoB,WAAWrB,GAAWqB,WAAWpB,IAC5D,IAAK,SAACD,EAASC,GAAV,OAAsBoB,WAAWrB,GAAWqB,WAAWpB,IAC5D,IAAK,SAACD,EAASC,GAAV,OAAsBoB,WAAWrB,GAAWqB,WAAWpB,IAC5D,IAAK,SAACD,EAASC,GACb,OAAKA,EACEoB,WAAWrB,GAAW,IADR,IAAMqB,WAAWrB,IAGxC,IAAK,SAACA,EAASC,GAAV,OAAsBA,I,MCqDdqB,MAjKf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNtC,EADM,KACCuC,EADD,OAEqCD,oBAAS,GAF9C,mBAENE,EAFM,KAEaC,EAFb,OAG6CH,oBAAS,GAHtD,mBAGNI,EAHM,KAGkBC,EAHlB,KAKbC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,kBAAMF,OAAOG,oBAAoB,UAAWD,OAGrD,IAAMrD,EAAU,SAAAoB,GAAG,OAAImC,EAASnC,IAE1BoC,EAAW,WACfX,EAAS,IACTI,GAAwB,GACxBF,GAAqB,IAGjBU,EAAY,WAChB,IAAMC,EAAWpD,EAAMqD,UAAU,EAAGrD,EAAMyB,OAAS,GACnDc,EAASa,GACTX,GAAqB,IAGjBa,EAAY,WAChB,IACE,IAAIC,EAAWvD,EAGfuD,ED/BkC,SAAAvD,GAItC,IAHA,IAAIwD,GAAqB,EACrBjD,EAAOP,EAEJwD,GAAoB,CACzB,IAAIC,EAAOvB,EAAgB3B,GAE3B,IAAKkD,EAEH,OADAD,GAAqB,EACdjD,EAITkD,EAAOA,EAAKtC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAE1C,IAAMF,EAAQlB,EAAa0D,GAE3BlD,EAAOA,EAAKY,QAAQ,IAAMsC,EAAO,IAAKxC,GAGxC,OAAOV,ECWQmD,CADXH,EDxC8C,SAAAvD,GAClD,OAAOA,EAAMmB,QAAQ,YAAY,SAAAwC,GAAC,OAAIA,EAAExC,QAAQ,IAAK,SCuCtCyC,CAAqCL,IAEhDA,EAAWxD,EAAawD,GAExBhB,EAASgB,GACTZ,GAAwB,GACxB,MAAOgB,GACPlB,EAAqBkB,EAAEE,WAIrBd,EAAY,SAAC,GAAa,IAAXe,EAAU,EAAVA,IACdhE,EAAQgC,SAASgC,KFrDR,WEuDVA,EFxDa,cE6DbA,EF3DS,UEgETA,EAIJb,EAASa,GAHPR,IALAH,IALAD,MAgBED,EAAW,SAAAc,GACf,IAAMX,EAAQ,UAAMpD,GAAN,OAAc+D,GAC5BxB,EAASa,IAGLY,EAAwBC,mBAC5B,WACE,OAAOvB,IAA2B1C,IAEpC,CAAC0C,EAAwB1C,IAG3B,OACE,kBAACkE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,cACd,wBAAIA,UAAU,SAAd,oBACA,kBAACC,EAAA,EAAD,KACE,kBAAC1E,EAAA,EAAD,CAAKyE,UAAU,oBACb,kBAACD,EAAA,EAAKG,QAAN,CAAcC,SAAU,aAAUvE,MAAOA,IACxCwC,GACC,kBAAC2B,EAAA,EAAKK,KAAN,CAAWJ,UAAU,cAAc5B,KAKzC,kBAAC6B,EAAA,EAAD,KACE,kBAAC,EAAD,CAAY5E,QAAQ,YAAYF,SAAS,IAAIG,QAASA,IACtD,kBAAC,EAAD,CAAYD,QAAQ,YAAYF,SAAS,IAAIG,QAASA,IACtD,kBAAC,EAAD,CAAYD,QAAQ,YAAYF,SAAS,IAAIG,QAASA,IACrDsE,EACC,kBAAC,EAAD,CAAYvE,QAAQ,UAAUF,SAAS,KAAKG,QAASwD,IAErD,kBAAC,EAAD,CAAYzD,QAAQ,UAAUF,SAAS,IAAIG,QAASyD,KAIxD,kBAACkB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAY5E,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CACED,QAAQ,YACRF,SAAS,IACTC,MAAM,OACNE,QAASA,KAIb,kBAAC2E,EAAA,EAAD,KACE,kBAAC,EAAD,CAAY5E,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CACED,QAAQ,YACRF,SAAS,IACTC,MAAM,OACNE,QAASA,KAIb,kBAAC2E,EAAA,EAAD,KACE,kBAAC,EAAD,CAAY5E,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,QAAQF,SAAU,EAAGG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,YAAYF,SAAS,IAAIG,QAASA,KAGxD,kBAAC2E,EAAA,EAAD,KACE,kBAAC,EAAD,CAAY5E,QAAQ,QAAQF,SAAS,IAAIG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,QAAQF,SAAS,IAAIG,QAASA,IAClD,kBAAC,EAAD,CAAYD,QAAQ,UAAUF,SAAS,IAAIG,QAAS4D,IACpD,kBAAC,EAAD,CACE7D,QAAQ,YACRF,SAAS,IACTC,MAAM,IACNE,QAASA,MAKf,yBAAK0E,UAAU,UACb,uBACEA,UAAU,gBACVK,KAAK,0CACLC,YAAU,eACVC,aAAW,uCAJb,QASA,uBACEP,UAAU,gBACVK,KAAK,gCACLE,aAAW,gCAHb,yBCvJYC,QACW,cAA7B/B,OAAOgC,SAASC,UAEe,UAA7BjC,OAAOgC,SAASC,UAEhBjC,OAAOgC,SAASC,SAAS3E,MACvB,2DCZN4E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM7B,c","file":"static/js/main.41faf338.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction CalcButton({ operator, label, variant, onClick }) {\n  return (\n    <Col>\n      <Button variant={variant} block onClick={() => onClick(operator)}>\n        {label || operator}\n      </Button>\n    </Col>\n  );\n}\n\nexport default CalcButton;\n","const backspaceKey = \"Backspace\";\nconst escapeKey = \"Escape\";\nconst enterKey = \"Enter\";\nconst pointKey = \".\";\nconst equalKey = \"=\";\nconst numbersKeys = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\nconst operatorKeys = [\"+\", \"-\", \"*\", \"/\"];\nconst parenthesesKeys = [\"(\", \")\"];\nconst percentsKey = \"%\";\n\nconst keyList = [\n  ...numbersKeys,\n  ...parenthesesKeys,\n  ...operatorKeys,\n  pointKey,\n  equalKey,\n  backspaceKey,\n  escapeKey,\n  enterKey,\n  percentsKey\n];\n\nexport { keyList, operatorKeys, backspaceKey, escapeKey, enterKey };\n","// Resolve numbers with parentheses together\n// Exemple 2(1+2) ---> 2*(1+2)\nexport const resolveNumberWithParenthesesTogether = value => {\n  return value.replace(/[0-9]\\(/g, e => e.replace(\"(\", \"*(\"));\n};\n\nexport const isOnlyValueWithPercents = value => {\n  const regex = \"(\\\\d+(\\\\.\\\\d+)?|\\\\.\\\\d+) ?%\";\n\n  return value.match(new RegExp(\"^\" + regex + \"$\", \"i\"));\n};\n\nexport const resolveInsideParentheses = value => {\n  let hasMoreParentheses = true;\n  let temp = value;\n\n  while (hasMoreParentheses) {\n    let find = findParentheses(temp);\n\n    if (!find) {\n      hasMoreParentheses = false;\n      return temp;\n    }\n\n    // Clear trashs\n    find = find.replace(\"(\", \"\").replace(\")\", \"\");\n\n    const total = resolveValue(find);\n\n    temp = temp.replace(\"(\" + find + \")\", total);\n  }\n\n  return temp;\n};\n\nexport const resolveValue = value => {\n  const operators = [\"%\", \"*\", \"/\", \"+\", \"-\"];\n\n  if (/^[%*+/]/.test(value)) {\n    throw new Error(\"Cannot start the expression with invalid operators\");\n  }\n\n  if (isOnlyValueWithPercents(value)) {\n    return operations[\"/\"](value, 100);\n  }\n\n  let temp = value;\n  operators.map(op => {\n    const arrayValues = convertValueIntoArray(temp);\n\n    let index = arrayValues.findIndex(val => val === op);\n\n    if (index > 0) {\n      const operator = arrayValues[index];\n      const number1 = arrayValues[index - 1];\n      const number2 = arrayValues[index + 1];\n\n      const total = operations[operator](number1, number2);\n\n      let toReplace = number1 + \"\" + operator + \"\" + number2;\n      if (operator === \"%\") {\n        toReplace = number1 + \"%\";\n      }\n\n      temp = temp.replace(toReplace, total);\n\n      index = arrayValues.findIndex(val => val === op);\n      if (index >= 1) {\n        temp = resolveValue(temp);\n      }\n    }\n    return {};\n  });\n  return temp;\n};\n\nexport const convertValueIntoArray = value => {\n  const array = value.split(\"\");\n  const priority = [\"*\", \"/\", \"+\", \"-\"];\n\n  let arrayValues = [];\n  let posistion = 0;\n\n  for (var i = 0; i < array.length; i++) {\n    const isCharacterZero = array[i] === \"0\";\n    const isCharacterDot = array[i] === \".\";\n    const isFirstCharacterMinus = array[i] === \"-\" && i === 0;\n    const isLastCharacterOperatorAndNowMinus =\n      array[i] === \"-\" && array[i - 1] && priority.includes(array[i - 1]);\n\n    if (\n      parseInt(array[i]) ||\n      isCharacterZero ||\n      isCharacterDot ||\n      isFirstCharacterMinus ||\n      isLastCharacterOperatorAndNowMinus\n    ) {\n      arrayValues[posistion] = (arrayValues[posistion] || \"\") + \"\" + array[i];\n    } else {\n      posistion++;\n      arrayValues[posistion] = array[i];\n      posistion++;\n    }\n  }\n\n  return arrayValues.filter(a => a);\n};\n\nexport const findParentheses = val => {\n  const result = val.match(/([(])[^()]+[)]/);\n  return result && result[0];\n};\n\nexport const operations = {\n  \"/\": (number1, number2) => parseFloat(number1) / parseFloat(number2),\n  \"*\": (number1, number2) => parseFloat(number1) * parseFloat(number2),\n  \"+\": (number1, number2) => parseFloat(number1) + parseFloat(number2),\n  \"-\": (number1, number2) => parseFloat(number1) - parseFloat(number2),\n  \"%\": (number1, number2) => {\n    if (!number2) return 100 / parseFloat(number1);\n    return parseFloat(number1) / 100;\n  },\n  \"=\": (number1, number2) => number2\n};\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CalcButton from \"./components/CalcButton\";\nimport Form from \"react-bootstrap/Form\";\nimport { keyList, backspaceKey, escapeKey, enterKey } from \"./constants\";\nimport {\n  resolveNumberWithParenthesesTogether,\n  resolveInsideParentheses,\n  resolveValue\n} from \"./functions\";\nimport \"./App.css\";\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [invalidExpression, setInvalidExpression] = useState(false);\n  const [isCalculationCompleted, setCalculationCompleted] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onKeydown);\n    return () => window.removeEventListener(\"keydown\", onKeydown);\n  });\n\n  const onClick = val => addValue(val);\n\n  const clearAll = () => {\n    setValue(\"\");\n    setCalculationCompleted(false);\n    setInvalidExpression(false);\n  };\n\n  const clearLast = () => {\n    const newValue = value.substring(0, value.length - 1);\n    setValue(newValue);\n    setInvalidExpression(false);\n  };\n\n  const calculate = () => {\n    try {\n      let tmpValue = value;\n\n      tmpValue = resolveNumberWithParenthesesTogether(tmpValue);\n      tmpValue = resolveInsideParentheses(tmpValue);\n      tmpValue = resolveValue(tmpValue);\n\n      setValue(tmpValue);\n      setCalculationCompleted(true);\n    } catch (e) {\n      setInvalidExpression(e.message);\n    }\n  };\n\n  const onKeydown = ({ key }) => {\n    if (!keyList.includes(key)) return;\n\n    if (key === escapeKey) {\n      clearAll();\n      return;\n    }\n\n    if (key === backspaceKey) {\n      clearLast();\n      return;\n    }\n\n    if (key === enterKey) {\n      calculate();\n      return;\n    }\n    addValue(key);\n  };\n\n  const addValue = add => {\n    const newValue = `${value}${add}`;\n    setValue(newValue);\n  };\n\n  const shouldDisplayAllClear = useMemo(\n    () => {\n      return isCalculationCompleted || !value;\n    },\n    [isCalculationCompleted, value]\n  );\n\n  return (\n    <Container>\n      <Form className=\"calculator\">\n        <h5 className=\"title\">React Calculator</h5>\n        <Row>\n          <Col className=\"col-form-control\">\n            <Form.Control onChange={() => {}} value={value} />\n            {invalidExpression && (\n              <Form.Text className=\"text-muted\">{invalidExpression}</Form.Text>\n            )}\n          </Col>\n        </Row>\n\n        <Row>\n          <CalcButton variant=\"secondary\" operator=\"(\" onClick={onClick} />\n          <CalcButton variant=\"secondary\" operator=\")\" onClick={onClick} />\n          <CalcButton variant=\"secondary\" operator=\"%\" onClick={onClick} />\n          {shouldDisplayAllClear ? (\n            <CalcButton variant=\"warning\" operator=\"AC\" onClick={clearAll} />\n          ) : (\n            <CalcButton variant=\"warning\" operator=\"C\" onClick={clearLast} />\n          )}\n        </Row>\n\n        <Row>\n          <CalcButton variant=\"light\" operator={7} onClick={onClick} />\n          <CalcButton variant=\"light\" operator={8} onClick={onClick} />\n          <CalcButton variant=\"light\" operator={9} onClick={onClick} />\n          <CalcButton\n            variant=\"secondary\"\n            operator=\"/\"\n            label=\"÷\"\n            onClick={onClick}\n          />\n        </Row>\n\n        <Row>\n          <CalcButton variant=\"light\" operator={4} onClick={onClick} />\n          <CalcButton variant=\"light\" operator={5} onClick={onClick} />\n          <CalcButton variant=\"light\" operator={6} onClick={onClick} />\n          <CalcButton\n            variant=\"secondary\"\n            operator=\"*\"\n            label=\"×\"\n            onClick={onClick}\n          />\n        </Row>\n\n        <Row>\n          <CalcButton variant=\"light\" operator={1} onClick={onClick} />\n          <CalcButton variant=\"light\" operator={2} onClick={onClick} />\n          <CalcButton variant=\"light\" operator={3} onClick={onClick} />\n          <CalcButton variant=\"secondary\" operator=\"-\" onClick={onClick} />\n        </Row>\n\n        <Row>\n          <CalcButton variant=\"light\" operator=\"0\" onClick={onClick} />\n          <CalcButton variant=\"light\" operator=\".\" onClick={onClick} />\n          <CalcButton variant=\"primary\" operator=\"=\" onClick={calculate} />\n          <CalcButton\n            variant=\"secondary\"\n            operator=\"+\"\n            label=\"+\"\n            onClick={onClick}\n          />\n        </Row>\n      </Form>\n\n      <div className=\"footer\">\n        <a\n          className=\"github-button\"\n          href=\"https://github.com/ntkme/github-buttons\"\n          data-icon=\"octicon-star\"\n          aria-label=\"Star ntkme/github-buttons on GitHub\"\n        >\n          Star\n        </a>\n\n        <a\n          className=\"github-button\"\n          href=\"https://github.com/carlosrbta\"\n          aria-label=\"Follow @carlosrbta on GitHub\"\n        >\n          Follow @carlosrbta\n        </a>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}